   0  $accept : declaration $end

   1  declaration : var declaration
   2              | const declaration
   3              | subprogram declaration
   4              |

   5  var : VAR IDENTIFIER id_exp ids_exps

   6  id_exp : EQUAL expression
   7         |

   8  ids_exps : COMMA IDENTIFIER id_exp ids_exps
   9           |

  10  const : CONST IDENTIFIER EQUAL expression const_aux

  11  const_aux : COMMA IDENTIFIER EQUAL expression const_aux
  12            |

  13  subprogram : procedure
  14             | function

  15  procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block

  16  function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block

  17  parameter_list : IDENTIFIER parameter_list_aux
  18                 | REF IDENTIFIER parameter_list_aux
  19                 |

  20  parameter_list_aux : COMMA parameter_list
  21                     |

  22  cb : command
  23     | block

  24  command : access_n_call
  25          | return
  26          | break
  27          | if
  28          | switch
  29          | loop
  30          | exit
  31          | for

  32  block : declaration BEG commands END

  33  commands : command commands_aux

  34  commands_aux : SEMICOLON commands
  35               |

  36  access_n_call : IDENTIFIER access_n_call_aux

  37  access_n_call_aux : access
  38                    | attribuition
  39                    | subprogram_call

  40  access : DOT IDENTIFIER access_n_call_aux
  41         | OPEN_BRACKETS l_exp CLOSE_BRACKETS access_n_call_aux
  42         |

  43  attribuition : EQUAL expression

  44  subprogram_call : OPEN_PARENTHESIS real_parameter_list CLOSE_PARENTHESIS

  45  real_parameter_list : REF IDENTIFIER real_parameter_list_aux
  46                      | expression real_parameter_list_aux
  47                      |

  48  real_parameter_list_aux : COMMA real_parameter_list
  49                          |

  50  l_exp : expression l_exp_aux

  51  l_exp_aux : COMMA l_exp
  52            |

  53  return : RETURN return_aux

  54  return_aux : expression
  55             |

  56  break : BREAK

  57  $$1 :

  58  $$2 :

  59  $$3 :

  60  $$4 :

  61  if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else

  62  else : ELSE_ cb
  63       |

  64  switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END

  65  caselist : CASE expression COLON cb caselist
  66           |

  67  default : DEFAULT COLON cb

  68  for : FOR IDENTIFIER EQUAL expression for_aux expression DO cb

  69  for_aux : TO
  70          | DOWNTO

  71  loop : LOOP commands END

  72  exit : EXIT WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

  73  expression : term_or term_or_tail

  74  term_or_tail : OR term_or term_or_tail
  75               |

  76  term_or : term_and term_and_tail

  77  term_and_tail : AND term_and term_and_tail
  78                |

  79  term_and : term_bool_comparison term_bool_comparison_tail

  80  term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison term_bool_comparison_tail
  81                            | NOT_EQUAL term_bool_comparison term_bool_comparison_tail
  82                            |

  83  term_bool_comparison : term_arit_comparison term_arit_comparison_tail

  84  term_arit_comparison_tail : LESS_THEN term_arit_comparison term_arit_comparison_tail
  85                            | BIGGER_THEN term_arit_comparison term_arit_comparison_tail
  86                            | LESS_EQUAL term_arit_comparison term_arit_comparison_tail
  87                            | BIGGER_EQUAL term_arit_comparison term_arit_comparison_tail
  88                            |

  89  term_arit_comparison : term term_tail

  90  term_tail : ADD term term_tail
  91            | SUB term term_tail
  92            |

  93  term : factor factor_tail

  94  factor_tail : MULT factor factor_tail
  95              | DIV factor factor_tail
  96              | MOD factor factor_tail
  97              |

  98  factor : negation_unsub negation_unsub_tail

  99  negation_unsub_tail : NEG negation_unsub
 100                      |

 101  negation_unsub : IDENTIFIER
 102                 | arr_exp
 103                 | literal
 104                 | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

 105  arr_exp : OPEN_BRACES literal arr_exp_aux CLOSE_BRACES

 106  arr_exp_aux : COMMA literal arr_exp_aux
 107              |

 108  literal : STRING_LIT
 109          | NUMBER_INT
 110          | NUMBER_REAL
 111          | TRUE
 112          | FALSE

state 0
	$accept : . declaration $end  (0)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4

	declaration  goto 5
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 1
	procedure : PROCEDURE . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (15)

	IDENTIFIER  shift 11
	.  error


state 2
	function : FUNCTION . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (16)

	IDENTIFIER  shift 12
	.  error


state 3
	var : VAR . IDENTIFIER id_exp ids_exps  (5)

	IDENTIFIER  shift 13
	.  error


state 4
	const : CONST . IDENTIFIER EQUAL expression const_aux  (10)

	IDENTIFIER  shift 14
	.  error


state 5
	$accept : declaration . $end  (0)

	$end  accept


state 6
	declaration : var . declaration  (1)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 15
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 7
	declaration : const . declaration  (2)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 16
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 8
	declaration : subprogram . declaration  (3)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 17
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 9
	subprogram : procedure .  (13)

	.  reduce 13


state 10
	subprogram : function .  (14)

	.  reduce 14


state 11
	procedure : PROCEDURE IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (15)

	OPEN_PARENTHESIS  shift 18
	.  error


state 12
	function : FUNCTION IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (16)

	OPEN_PARENTHESIS  shift 19
	.  error


state 13
	var : VAR IDENTIFIER . id_exp ids_exps  (5)
	id_exp : .  (7)

	EQUAL  shift 20
	$end  reduce 7
	PROCEDURE  reduce 7
	FUNCTION  reduce 7
	VAR  reduce 7
	CONST  reduce 7
	BEG  reduce 7
	COMMA  reduce 7

	id_exp  goto 21


state 14
	const : CONST IDENTIFIER . EQUAL expression const_aux  (10)

	EQUAL  shift 22
	.  error


state 15
	declaration : var declaration .  (1)

	.  reduce 1


state 16
	declaration : const declaration .  (2)

	.  reduce 2


state 17
	declaration : subprogram declaration .  (3)

	.  reduce 3


state 18
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS block  (15)
	parameter_list : .  (19)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 19

	parameter_list  goto 25


state 19
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS block  (16)
	parameter_list : .  (19)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 19

	parameter_list  goto 26


state 20
	id_exp : EQUAL . expression  (6)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 35
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 21
	var : VAR IDENTIFIER id_exp . ids_exps  (5)
	ids_exps : .  (9)

	COMMA  shift 45
	$end  reduce 9
	PROCEDURE  reduce 9
	FUNCTION  reduce 9
	VAR  reduce 9
	CONST  reduce 9
	BEG  reduce 9

	ids_exps  goto 46


state 22
	const : CONST IDENTIFIER EQUAL . expression const_aux  (10)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 47
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 23
	parameter_list : IDENTIFIER . parameter_list_aux  (17)
	parameter_list_aux : .  (21)

	COMMA  shift 48
	CLOSE_PARENTHESIS  reduce 21

	parameter_list_aux  goto 49


state 24
	parameter_list : REF . IDENTIFIER parameter_list_aux  (18)

	IDENTIFIER  shift 50
	.  error


state 25
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS block  (15)

	CLOSE_PARENTHESIS  shift 51
	.  error


state 26
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS block  (16)

	CLOSE_PARENTHESIS  shift 52
	.  error


state 27
	negation_unsub : IDENTIFIER .  (101)

	.  reduce 101


state 28
	literal : STRING_LIT .  (108)

	.  reduce 108


state 29
	literal : NUMBER_INT .  (109)

	.  reduce 109


state 30
	literal : NUMBER_REAL .  (110)

	.  reduce 110


state 31
	literal : TRUE .  (111)

	.  reduce 111


state 32
	literal : FALSE .  (112)

	.  reduce 112


state 33
	negation_unsub : OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS  (104)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 53
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 34
	arr_exp : OPEN_BRACES . literal arr_exp_aux CLOSE_BRACES  (105)

	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	.  error

	literal  goto 54


state 35
	id_exp : EQUAL expression .  (6)

	.  reduce 6


state 36
	expression : term_or . term_or_tail  (73)
	term_or_tail : .  (75)

	OR  shift 55
	$end  reduce 75
	PROCEDURE  reduce 75
	FUNCTION  reduce 75
	VAR  reduce 75
	CONST  reduce 75
	BEG  reduce 75
	END  reduce 75
	ELSE_  reduce 75
	CASE  reduce 75
	DEFAULT  reduce 75
	DOWNTO  reduce 75
	TO  reduce 75
	DO  reduce 75
	SEMICOLON  reduce 75
	COLON  reduce 75
	COMMA  reduce 75
	CLOSE_PARENTHESIS  reduce 75
	CLOSE_BRACKETS  reduce 75

	term_or_tail  goto 56


state 37
	term_or : term_and . term_and_tail  (76)
	term_and_tail : .  (78)

	AND  shift 57
	$end  reduce 78
	PROCEDURE  reduce 78
	FUNCTION  reduce 78
	VAR  reduce 78
	CONST  reduce 78
	BEG  reduce 78
	END  reduce 78
	ELSE_  reduce 78
	CASE  reduce 78
	DEFAULT  reduce 78
	DOWNTO  reduce 78
	TO  reduce 78
	DO  reduce 78
	SEMICOLON  reduce 78
	COLON  reduce 78
	COMMA  reduce 78
	CLOSE_PARENTHESIS  reduce 78
	CLOSE_BRACKETS  reduce 78
	OR  reduce 78

	term_and_tail  goto 58


state 38
	term_and : term_bool_comparison . term_bool_comparison_tail  (79)
	term_bool_comparison_tail : .  (82)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 82
	PROCEDURE  reduce 82
	FUNCTION  reduce 82
	VAR  reduce 82
	CONST  reduce 82
	BEG  reduce 82
	END  reduce 82
	ELSE_  reduce 82
	CASE  reduce 82
	DEFAULT  reduce 82
	DOWNTO  reduce 82
	TO  reduce 82
	DO  reduce 82
	SEMICOLON  reduce 82
	COLON  reduce 82
	COMMA  reduce 82
	CLOSE_PARENTHESIS  reduce 82
	CLOSE_BRACKETS  reduce 82
	OR  reduce 82
	AND  reduce 82

	term_bool_comparison_tail  goto 61


state 39
	term_bool_comparison : term_arit_comparison . term_arit_comparison_tail  (83)
	term_arit_comparison_tail : .  (88)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 88
	PROCEDURE  reduce 88
	FUNCTION  reduce 88
	VAR  reduce 88
	CONST  reduce 88
	BEG  reduce 88
	END  reduce 88
	ELSE_  reduce 88
	CASE  reduce 88
	DEFAULT  reduce 88
	DOWNTO  reduce 88
	TO  reduce 88
	DO  reduce 88
	SEMICOLON  reduce 88
	COLON  reduce 88
	COMMA  reduce 88
	CLOSE_PARENTHESIS  reduce 88
	CLOSE_BRACKETS  reduce 88
	OR  reduce 88
	AND  reduce 88
	EQUAL_LOGIC  reduce 88
	NOT_EQUAL  reduce 88

	term_arit_comparison_tail  goto 66


state 40
	term_arit_comparison : term . term_tail  (89)
	term_tail : .  (92)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 92
	PROCEDURE  reduce 92
	FUNCTION  reduce 92
	VAR  reduce 92
	CONST  reduce 92
	BEG  reduce 92
	END  reduce 92
	ELSE_  reduce 92
	CASE  reduce 92
	DEFAULT  reduce 92
	DOWNTO  reduce 92
	TO  reduce 92
	DO  reduce 92
	SEMICOLON  reduce 92
	COLON  reduce 92
	COMMA  reduce 92
	CLOSE_PARENTHESIS  reduce 92
	CLOSE_BRACKETS  reduce 92
	OR  reduce 92
	AND  reduce 92
	LESS_THEN  reduce 92
	BIGGER_THEN  reduce 92
	EQUAL_LOGIC  reduce 92
	NOT_EQUAL  reduce 92
	LESS_EQUAL  reduce 92
	BIGGER_EQUAL  reduce 92

	term_tail  goto 69


state 41
	term : factor . factor_tail  (93)
	factor_tail : .  (97)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 97
	PROCEDURE  reduce 97
	FUNCTION  reduce 97
	VAR  reduce 97
	CONST  reduce 97
	BEG  reduce 97
	END  reduce 97
	ELSE_  reduce 97
	CASE  reduce 97
	DEFAULT  reduce 97
	DOWNTO  reduce 97
	TO  reduce 97
	DO  reduce 97
	SEMICOLON  reduce 97
	COLON  reduce 97
	COMMA  reduce 97
	CLOSE_PARENTHESIS  reduce 97
	CLOSE_BRACKETS  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	OR  reduce 97
	AND  reduce 97
	LESS_THEN  reduce 97
	BIGGER_THEN  reduce 97
	EQUAL_LOGIC  reduce 97
	NOT_EQUAL  reduce 97
	LESS_EQUAL  reduce 97
	BIGGER_EQUAL  reduce 97

	factor_tail  goto 73


state 42
	factor : negation_unsub . negation_unsub_tail  (98)
	negation_unsub_tail : .  (100)

	NEG  shift 74
	$end  reduce 100
	PROCEDURE  reduce 100
	FUNCTION  reduce 100
	VAR  reduce 100
	CONST  reduce 100
	BEG  reduce 100
	END  reduce 100
	ELSE_  reduce 100
	CASE  reduce 100
	DEFAULT  reduce 100
	DOWNTO  reduce 100
	TO  reduce 100
	DO  reduce 100
	SEMICOLON  reduce 100
	COLON  reduce 100
	COMMA  reduce 100
	CLOSE_PARENTHESIS  reduce 100
	CLOSE_BRACKETS  reduce 100
	ADD  reduce 100
	SUB  reduce 100
	MULT  reduce 100
	DIV  reduce 100
	MOD  reduce 100
	OR  reduce 100
	AND  reduce 100
	LESS_THEN  reduce 100
	BIGGER_THEN  reduce 100
	EQUAL_LOGIC  reduce 100
	NOT_EQUAL  reduce 100
	LESS_EQUAL  reduce 100
	BIGGER_EQUAL  reduce 100

	negation_unsub_tail  goto 75


state 43
	negation_unsub : arr_exp .  (102)

	.  reduce 102


state 44
	negation_unsub : literal .  (103)

	.  reduce 103


state 45
	ids_exps : COMMA . IDENTIFIER id_exp ids_exps  (8)

	IDENTIFIER  shift 76
	.  error


state 46
	var : VAR IDENTIFIER id_exp ids_exps .  (5)

	.  reduce 5


state 47
	const : CONST IDENTIFIER EQUAL expression . const_aux  (10)
	const_aux : .  (12)

	COMMA  shift 77
	$end  reduce 12
	PROCEDURE  reduce 12
	FUNCTION  reduce 12
	VAR  reduce 12
	CONST  reduce 12
	BEG  reduce 12

	const_aux  goto 78


state 48
	parameter_list_aux : COMMA . parameter_list  (20)
	parameter_list : .  (19)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 19

	parameter_list  goto 79


state 49
	parameter_list : IDENTIFIER parameter_list_aux .  (17)

	.  reduce 17


state 50
	parameter_list : REF IDENTIFIER . parameter_list_aux  (18)
	parameter_list_aux : .  (21)

	COMMA  shift 48
	CLOSE_PARENTHESIS  reduce 21

	parameter_list_aux  goto 80


state 51
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . block  (15)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 82


state 52
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . block  (16)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 83


state 53
	negation_unsub : OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS  (104)

	CLOSE_PARENTHESIS  shift 84
	.  error


state 54
	arr_exp : OPEN_BRACES literal . arr_exp_aux CLOSE_BRACES  (105)
	arr_exp_aux : .  (107)

	COMMA  shift 85
	CLOSE_BRACES  reduce 107

	arr_exp_aux  goto 86


state 55
	term_or_tail : OR . term_or term_or_tail  (74)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_or  goto 87
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 56
	expression : term_or term_or_tail .  (73)

	.  reduce 73


state 57
	term_and_tail : AND . term_and term_and_tail  (77)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_and  goto 88
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 58
	term_or : term_and term_and_tail .  (76)

	.  reduce 76


state 59
	term_bool_comparison_tail : EQUAL_LOGIC . term_bool_comparison term_bool_comparison_tail  (80)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_bool_comparison  goto 89
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 60
	term_bool_comparison_tail : NOT_EQUAL . term_bool_comparison term_bool_comparison_tail  (81)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_bool_comparison  goto 90
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 61
	term_and : term_bool_comparison term_bool_comparison_tail .  (79)

	.  reduce 79


state 62
	term_arit_comparison_tail : LESS_THEN . term_arit_comparison term_arit_comparison_tail  (84)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 91
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 63
	term_arit_comparison_tail : BIGGER_THEN . term_arit_comparison term_arit_comparison_tail  (85)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 92
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 64
	term_arit_comparison_tail : LESS_EQUAL . term_arit_comparison term_arit_comparison_tail  (86)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 93
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 65
	term_arit_comparison_tail : BIGGER_EQUAL . term_arit_comparison term_arit_comparison_tail  (87)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 94
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 66
	term_bool_comparison : term_arit_comparison term_arit_comparison_tail .  (83)

	.  reduce 83


state 67
	term_tail : ADD . term term_tail  (90)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term  goto 95
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 68
	term_tail : SUB . term term_tail  (91)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term  goto 96
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 69
	term_arit_comparison : term term_tail .  (89)

	.  reduce 89


state 70
	factor_tail : MULT . factor factor_tail  (94)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 97
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 71
	factor_tail : DIV . factor factor_tail  (95)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 98
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 72
	factor_tail : MOD . factor factor_tail  (96)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 99
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 73
	term : factor factor_tail .  (93)

	.  reduce 93


state 74
	negation_unsub_tail : NEG . negation_unsub  (99)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	negation_unsub  goto 100
	arr_exp  goto 43
	literal  goto 44


state 75
	factor : negation_unsub negation_unsub_tail .  (98)

	.  reduce 98


state 76
	ids_exps : COMMA IDENTIFIER . id_exp ids_exps  (8)
	id_exp : .  (7)

	EQUAL  shift 20
	$end  reduce 7
	PROCEDURE  reduce 7
	FUNCTION  reduce 7
	VAR  reduce 7
	CONST  reduce 7
	BEG  reduce 7
	COMMA  reduce 7

	id_exp  goto 101


state 77
	const_aux : COMMA . IDENTIFIER EQUAL expression const_aux  (11)

	IDENTIFIER  shift 102
	.  error


state 78
	const : CONST IDENTIFIER EQUAL expression const_aux .  (10)

	.  reduce 10


state 79
	parameter_list_aux : COMMA parameter_list .  (20)

	.  reduce 20


state 80
	parameter_list : REF IDENTIFIER parameter_list_aux .  (18)

	.  reduce 18


state 81
	block : declaration . BEG commands END  (32)

	BEG  shift 103
	.  error


state 82
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block .  (15)

	.  reduce 15


state 83
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block .  (16)

	.  reduce 16


state 84
	negation_unsub : OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .  (104)

	.  reduce 104


state 85
	arr_exp_aux : COMMA . literal arr_exp_aux  (106)

	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	.  error

	literal  goto 104


state 86
	arr_exp : OPEN_BRACES literal arr_exp_aux . CLOSE_BRACES  (105)

	CLOSE_BRACES  shift 105
	.  error


state 87
	term_or_tail : OR term_or . term_or_tail  (74)
	term_or_tail : .  (75)

	OR  shift 55
	$end  reduce 75
	PROCEDURE  reduce 75
	FUNCTION  reduce 75
	VAR  reduce 75
	CONST  reduce 75
	BEG  reduce 75
	END  reduce 75
	ELSE_  reduce 75
	CASE  reduce 75
	DEFAULT  reduce 75
	DOWNTO  reduce 75
	TO  reduce 75
	DO  reduce 75
	SEMICOLON  reduce 75
	COLON  reduce 75
	COMMA  reduce 75
	CLOSE_PARENTHESIS  reduce 75
	CLOSE_BRACKETS  reduce 75

	term_or_tail  goto 106


state 88
	term_and_tail : AND term_and . term_and_tail  (77)
	term_and_tail : .  (78)

	AND  shift 57
	$end  reduce 78
	PROCEDURE  reduce 78
	FUNCTION  reduce 78
	VAR  reduce 78
	CONST  reduce 78
	BEG  reduce 78
	END  reduce 78
	ELSE_  reduce 78
	CASE  reduce 78
	DEFAULT  reduce 78
	DOWNTO  reduce 78
	TO  reduce 78
	DO  reduce 78
	SEMICOLON  reduce 78
	COLON  reduce 78
	COMMA  reduce 78
	CLOSE_PARENTHESIS  reduce 78
	CLOSE_BRACKETS  reduce 78
	OR  reduce 78

	term_and_tail  goto 107


state 89
	term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison . term_bool_comparison_tail  (80)
	term_bool_comparison_tail : .  (82)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 82
	PROCEDURE  reduce 82
	FUNCTION  reduce 82
	VAR  reduce 82
	CONST  reduce 82
	BEG  reduce 82
	END  reduce 82
	ELSE_  reduce 82
	CASE  reduce 82
	DEFAULT  reduce 82
	DOWNTO  reduce 82
	TO  reduce 82
	DO  reduce 82
	SEMICOLON  reduce 82
	COLON  reduce 82
	COMMA  reduce 82
	CLOSE_PARENTHESIS  reduce 82
	CLOSE_BRACKETS  reduce 82
	OR  reduce 82
	AND  reduce 82

	term_bool_comparison_tail  goto 108


state 90
	term_bool_comparison_tail : NOT_EQUAL term_bool_comparison . term_bool_comparison_tail  (81)
	term_bool_comparison_tail : .  (82)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 82
	PROCEDURE  reduce 82
	FUNCTION  reduce 82
	VAR  reduce 82
	CONST  reduce 82
	BEG  reduce 82
	END  reduce 82
	ELSE_  reduce 82
	CASE  reduce 82
	DEFAULT  reduce 82
	DOWNTO  reduce 82
	TO  reduce 82
	DO  reduce 82
	SEMICOLON  reduce 82
	COLON  reduce 82
	COMMA  reduce 82
	CLOSE_PARENTHESIS  reduce 82
	CLOSE_BRACKETS  reduce 82
	OR  reduce 82
	AND  reduce 82

	term_bool_comparison_tail  goto 109


state 91
	term_arit_comparison_tail : LESS_THEN term_arit_comparison . term_arit_comparison_tail  (84)
	term_arit_comparison_tail : .  (88)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 88
	PROCEDURE  reduce 88
	FUNCTION  reduce 88
	VAR  reduce 88
	CONST  reduce 88
	BEG  reduce 88
	END  reduce 88
	ELSE_  reduce 88
	CASE  reduce 88
	DEFAULT  reduce 88
	DOWNTO  reduce 88
	TO  reduce 88
	DO  reduce 88
	SEMICOLON  reduce 88
	COLON  reduce 88
	COMMA  reduce 88
	CLOSE_PARENTHESIS  reduce 88
	CLOSE_BRACKETS  reduce 88
	OR  reduce 88
	AND  reduce 88
	EQUAL_LOGIC  reduce 88
	NOT_EQUAL  reduce 88

	term_arit_comparison_tail  goto 110


state 92
	term_arit_comparison_tail : BIGGER_THEN term_arit_comparison . term_arit_comparison_tail  (85)
	term_arit_comparison_tail : .  (88)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 88
	PROCEDURE  reduce 88
	FUNCTION  reduce 88
	VAR  reduce 88
	CONST  reduce 88
	BEG  reduce 88
	END  reduce 88
	ELSE_  reduce 88
	CASE  reduce 88
	DEFAULT  reduce 88
	DOWNTO  reduce 88
	TO  reduce 88
	DO  reduce 88
	SEMICOLON  reduce 88
	COLON  reduce 88
	COMMA  reduce 88
	CLOSE_PARENTHESIS  reduce 88
	CLOSE_BRACKETS  reduce 88
	OR  reduce 88
	AND  reduce 88
	EQUAL_LOGIC  reduce 88
	NOT_EQUAL  reduce 88

	term_arit_comparison_tail  goto 111


state 93
	term_arit_comparison_tail : LESS_EQUAL term_arit_comparison . term_arit_comparison_tail  (86)
	term_arit_comparison_tail : .  (88)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 88
	PROCEDURE  reduce 88
	FUNCTION  reduce 88
	VAR  reduce 88
	CONST  reduce 88
	BEG  reduce 88
	END  reduce 88
	ELSE_  reduce 88
	CASE  reduce 88
	DEFAULT  reduce 88
	DOWNTO  reduce 88
	TO  reduce 88
	DO  reduce 88
	SEMICOLON  reduce 88
	COLON  reduce 88
	COMMA  reduce 88
	CLOSE_PARENTHESIS  reduce 88
	CLOSE_BRACKETS  reduce 88
	OR  reduce 88
	AND  reduce 88
	EQUAL_LOGIC  reduce 88
	NOT_EQUAL  reduce 88

	term_arit_comparison_tail  goto 112


state 94
	term_arit_comparison_tail : BIGGER_EQUAL term_arit_comparison . term_arit_comparison_tail  (87)
	term_arit_comparison_tail : .  (88)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 88
	PROCEDURE  reduce 88
	FUNCTION  reduce 88
	VAR  reduce 88
	CONST  reduce 88
	BEG  reduce 88
	END  reduce 88
	ELSE_  reduce 88
	CASE  reduce 88
	DEFAULT  reduce 88
	DOWNTO  reduce 88
	TO  reduce 88
	DO  reduce 88
	SEMICOLON  reduce 88
	COLON  reduce 88
	COMMA  reduce 88
	CLOSE_PARENTHESIS  reduce 88
	CLOSE_BRACKETS  reduce 88
	OR  reduce 88
	AND  reduce 88
	EQUAL_LOGIC  reduce 88
	NOT_EQUAL  reduce 88

	term_arit_comparison_tail  goto 113


state 95
	term_tail : ADD term . term_tail  (90)
	term_tail : .  (92)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 92
	PROCEDURE  reduce 92
	FUNCTION  reduce 92
	VAR  reduce 92
	CONST  reduce 92
	BEG  reduce 92
	END  reduce 92
	ELSE_  reduce 92
	CASE  reduce 92
	DEFAULT  reduce 92
	DOWNTO  reduce 92
	TO  reduce 92
	DO  reduce 92
	SEMICOLON  reduce 92
	COLON  reduce 92
	COMMA  reduce 92
	CLOSE_PARENTHESIS  reduce 92
	CLOSE_BRACKETS  reduce 92
	OR  reduce 92
	AND  reduce 92
	LESS_THEN  reduce 92
	BIGGER_THEN  reduce 92
	EQUAL_LOGIC  reduce 92
	NOT_EQUAL  reduce 92
	LESS_EQUAL  reduce 92
	BIGGER_EQUAL  reduce 92

	term_tail  goto 114


state 96
	term_tail : SUB term . term_tail  (91)
	term_tail : .  (92)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 92
	PROCEDURE  reduce 92
	FUNCTION  reduce 92
	VAR  reduce 92
	CONST  reduce 92
	BEG  reduce 92
	END  reduce 92
	ELSE_  reduce 92
	CASE  reduce 92
	DEFAULT  reduce 92
	DOWNTO  reduce 92
	TO  reduce 92
	DO  reduce 92
	SEMICOLON  reduce 92
	COLON  reduce 92
	COMMA  reduce 92
	CLOSE_PARENTHESIS  reduce 92
	CLOSE_BRACKETS  reduce 92
	OR  reduce 92
	AND  reduce 92
	LESS_THEN  reduce 92
	BIGGER_THEN  reduce 92
	EQUAL_LOGIC  reduce 92
	NOT_EQUAL  reduce 92
	LESS_EQUAL  reduce 92
	BIGGER_EQUAL  reduce 92

	term_tail  goto 115


state 97
	factor_tail : MULT factor . factor_tail  (94)
	factor_tail : .  (97)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 97
	PROCEDURE  reduce 97
	FUNCTION  reduce 97
	VAR  reduce 97
	CONST  reduce 97
	BEG  reduce 97
	END  reduce 97
	ELSE_  reduce 97
	CASE  reduce 97
	DEFAULT  reduce 97
	DOWNTO  reduce 97
	TO  reduce 97
	DO  reduce 97
	SEMICOLON  reduce 97
	COLON  reduce 97
	COMMA  reduce 97
	CLOSE_PARENTHESIS  reduce 97
	CLOSE_BRACKETS  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	OR  reduce 97
	AND  reduce 97
	LESS_THEN  reduce 97
	BIGGER_THEN  reduce 97
	EQUAL_LOGIC  reduce 97
	NOT_EQUAL  reduce 97
	LESS_EQUAL  reduce 97
	BIGGER_EQUAL  reduce 97

	factor_tail  goto 116


state 98
	factor_tail : DIV factor . factor_tail  (95)
	factor_tail : .  (97)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 97
	PROCEDURE  reduce 97
	FUNCTION  reduce 97
	VAR  reduce 97
	CONST  reduce 97
	BEG  reduce 97
	END  reduce 97
	ELSE_  reduce 97
	CASE  reduce 97
	DEFAULT  reduce 97
	DOWNTO  reduce 97
	TO  reduce 97
	DO  reduce 97
	SEMICOLON  reduce 97
	COLON  reduce 97
	COMMA  reduce 97
	CLOSE_PARENTHESIS  reduce 97
	CLOSE_BRACKETS  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	OR  reduce 97
	AND  reduce 97
	LESS_THEN  reduce 97
	BIGGER_THEN  reduce 97
	EQUAL_LOGIC  reduce 97
	NOT_EQUAL  reduce 97
	LESS_EQUAL  reduce 97
	BIGGER_EQUAL  reduce 97

	factor_tail  goto 117


state 99
	factor_tail : MOD factor . factor_tail  (96)
	factor_tail : .  (97)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 97
	PROCEDURE  reduce 97
	FUNCTION  reduce 97
	VAR  reduce 97
	CONST  reduce 97
	BEG  reduce 97
	END  reduce 97
	ELSE_  reduce 97
	CASE  reduce 97
	DEFAULT  reduce 97
	DOWNTO  reduce 97
	TO  reduce 97
	DO  reduce 97
	SEMICOLON  reduce 97
	COLON  reduce 97
	COMMA  reduce 97
	CLOSE_PARENTHESIS  reduce 97
	CLOSE_BRACKETS  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	OR  reduce 97
	AND  reduce 97
	LESS_THEN  reduce 97
	BIGGER_THEN  reduce 97
	EQUAL_LOGIC  reduce 97
	NOT_EQUAL  reduce 97
	LESS_EQUAL  reduce 97
	BIGGER_EQUAL  reduce 97

	factor_tail  goto 118


state 100
	negation_unsub_tail : NEG negation_unsub .  (99)

	.  reduce 99


state 101
	ids_exps : COMMA IDENTIFIER id_exp . ids_exps  (8)
	ids_exps : .  (9)

	COMMA  shift 45
	$end  reduce 9
	PROCEDURE  reduce 9
	FUNCTION  reduce 9
	VAR  reduce 9
	CONST  reduce 9
	BEG  reduce 9

	ids_exps  goto 119


state 102
	const_aux : COMMA IDENTIFIER . EQUAL expression const_aux  (11)

	EQUAL  shift 120
	.  error


state 103
	block : declaration BEG . commands END  (32)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 129
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 138


state 104
	arr_exp_aux : COMMA literal . arr_exp_aux  (106)
	arr_exp_aux : .  (107)

	COMMA  shift 85
	CLOSE_BRACES  reduce 107

	arr_exp_aux  goto 139


state 105
	arr_exp : OPEN_BRACES literal arr_exp_aux CLOSE_BRACES .  (105)

	.  reduce 105


state 106
	term_or_tail : OR term_or term_or_tail .  (74)

	.  reduce 74


state 107
	term_and_tail : AND term_and term_and_tail .  (77)

	.  reduce 77


state 108
	term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison term_bool_comparison_tail .  (80)

	.  reduce 80


state 109
	term_bool_comparison_tail : NOT_EQUAL term_bool_comparison term_bool_comparison_tail .  (81)

	.  reduce 81


state 110
	term_arit_comparison_tail : LESS_THEN term_arit_comparison term_arit_comparison_tail .  (84)

	.  reduce 84


state 111
	term_arit_comparison_tail : BIGGER_THEN term_arit_comparison term_arit_comparison_tail .  (85)

	.  reduce 85


state 112
	term_arit_comparison_tail : LESS_EQUAL term_arit_comparison term_arit_comparison_tail .  (86)

	.  reduce 86


state 113
	term_arit_comparison_tail : BIGGER_EQUAL term_arit_comparison term_arit_comparison_tail .  (87)

	.  reduce 87


state 114
	term_tail : ADD term term_tail .  (90)

	.  reduce 90


state 115
	term_tail : SUB term term_tail .  (91)

	.  reduce 91


state 116
	factor_tail : MULT factor factor_tail .  (94)

	.  reduce 94


state 117
	factor_tail : DIV factor factor_tail .  (95)

	.  reduce 95


state 118
	factor_tail : MOD factor factor_tail .  (96)

	.  reduce 96


state 119
	ids_exps : COMMA IDENTIFIER id_exp ids_exps .  (8)

	.  reduce 8


state 120
	const_aux : COMMA IDENTIFIER EQUAL . expression const_aux  (11)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 140
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 121
	access_n_call : IDENTIFIER . access_n_call_aux  (36)
	access : .  (42)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 42
	ELSE_  reduce 42
	CASE  reduce 42
	DEFAULT  reduce 42
	SEMICOLON  reduce 42
	CLOSE_PARENTHESIS  reduce 42

	access_n_call_aux  goto 145
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 122
	return : RETURN . return_aux  (53)
	return_aux : .  (55)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	END  reduce 55
	ELSE_  reduce 55
	CASE  reduce 55
	DEFAULT  reduce 55
	SEMICOLON  reduce 55

	expression  goto 149
	return_aux  goto 150
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 123
	break : BREAK .  (56)

	.  reduce 56


state 124
	if : IF . $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else  (61)
	$$1 : .  (57)

	.  reduce 57

	$$1  goto 151


state 125
	switch : SWITCH . OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END  (64)

	OPEN_PARENTHESIS  shift 152
	.  error


state 126
	for : FOR . IDENTIFIER EQUAL expression for_aux expression DO cb  (68)

	IDENTIFIER  shift 153
	.  error


state 127
	loop : LOOP . commands END  (71)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 129
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 154


state 128
	exit : EXIT . WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS  (72)

	WHEN  shift 155
	.  error


state 129
	commands : command . commands_aux  (33)
	commands_aux : .  (35)

	SEMICOLON  shift 156
	END  reduce 35

	commands_aux  goto 157


state 130
	command : access_n_call .  (24)

	.  reduce 24


state 131
	command : return .  (25)

	.  reduce 25


state 132
	command : break .  (26)

	.  reduce 26


state 133
	command : if .  (27)

	.  reduce 27


state 134
	command : switch .  (28)

	.  reduce 28


state 135
	command : loop .  (29)

	.  reduce 29


state 136
	command : exit .  (30)

	.  reduce 30


state 137
	command : for .  (31)

	.  reduce 31


state 138
	block : declaration BEG commands . END  (32)

	END  shift 158
	.  error


state 139
	arr_exp_aux : COMMA literal arr_exp_aux .  (106)

	.  reduce 106


state 140
	const_aux : COMMA IDENTIFIER EQUAL expression . const_aux  (11)
	const_aux : .  (12)

	COMMA  shift 77
	$end  reduce 12
	PROCEDURE  reduce 12
	FUNCTION  reduce 12
	VAR  reduce 12
	CONST  reduce 12
	BEG  reduce 12

	const_aux  goto 159


state 141
	access : DOT . IDENTIFIER access_n_call_aux  (40)

	IDENTIFIER  shift 160
	.  error


state 142
	subprogram_call : OPEN_PARENTHESIS . real_parameter_list CLOSE_PARENTHESIS  (44)
	real_parameter_list : .  (47)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	REF  shift 161
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	CLOSE_PARENTHESIS  reduce 47

	expression  goto 162
	real_parameter_list  goto 163
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 143
	access : OPEN_BRACKETS . l_exp CLOSE_BRACKETS access_n_call_aux  (41)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 164
	l_exp  goto 165
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 144
	attribuition : EQUAL . expression  (43)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 166
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 145
	access_n_call : IDENTIFIER access_n_call_aux .  (36)

	.  reduce 36


state 146
	access_n_call_aux : access .  (37)

	.  reduce 37


state 147
	access_n_call_aux : attribuition .  (38)

	.  reduce 38


state 148
	access_n_call_aux : subprogram_call .  (39)

	.  reduce 39


state 149
	return_aux : expression .  (54)

	.  reduce 54


state 150
	return : RETURN return_aux .  (53)

	.  reduce 53


state 151
	if : IF $$1 . OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else  (61)

	OPEN_PARENTHESIS  shift 167
	.  error


state 152
	switch : SWITCH OPEN_PARENTHESIS . access_n_call CLOSE_PARENTHESIS BEG caselist default END  (64)

	IDENTIFIER  shift 121
	.  error

	access_n_call  goto 168


state 153
	for : FOR IDENTIFIER . EQUAL expression for_aux expression DO cb  (68)

	EQUAL  shift 169
	.  error


state 154
	loop : LOOP commands . END  (71)

	END  shift 170
	.  error


state 155
	exit : EXIT WHEN . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS  (72)

	OPEN_PARENTHESIS  shift 171
	.  error


state 156
	commands_aux : SEMICOLON . commands  (34)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 129
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 172


state 157
	commands : command commands_aux .  (33)

	.  reduce 33


state 158
	block : declaration BEG commands END .  (32)

	.  reduce 32


state 159
	const_aux : COMMA IDENTIFIER EQUAL expression const_aux .  (11)

	.  reduce 11


state 160
	access : DOT IDENTIFIER . access_n_call_aux  (40)
	access : .  (42)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 42
	ELSE_  reduce 42
	CASE  reduce 42
	DEFAULT  reduce 42
	SEMICOLON  reduce 42
	CLOSE_PARENTHESIS  reduce 42

	access_n_call_aux  goto 173
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 161
	real_parameter_list : REF . IDENTIFIER real_parameter_list_aux  (45)

	IDENTIFIER  shift 174
	.  error


state 162
	real_parameter_list : expression . real_parameter_list_aux  (46)
	real_parameter_list_aux : .  (49)

	COMMA  shift 175
	CLOSE_PARENTHESIS  reduce 49

	real_parameter_list_aux  goto 176


state 163
	subprogram_call : OPEN_PARENTHESIS real_parameter_list . CLOSE_PARENTHESIS  (44)

	CLOSE_PARENTHESIS  shift 177
	.  error


state 164
	l_exp : expression . l_exp_aux  (50)
	l_exp_aux : .  (52)

	COMMA  shift 178
	CLOSE_BRACKETS  reduce 52

	l_exp_aux  goto 179


state 165
	access : OPEN_BRACKETS l_exp . CLOSE_BRACKETS access_n_call_aux  (41)

	CLOSE_BRACKETS  shift 180
	.  error


state 166
	attribuition : EQUAL expression .  (43)

	.  reduce 43


state 167
	if : IF $$1 OPEN_PARENTHESIS . $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else  (61)
	$$2 : .  (58)

	.  reduce 58

	$$2  goto 181


state 168
	switch : SWITCH OPEN_PARENTHESIS access_n_call . CLOSE_PARENTHESIS BEG caselist default END  (64)

	CLOSE_PARENTHESIS  shift 182
	.  error


state 169
	for : FOR IDENTIFIER EQUAL . expression for_aux expression DO cb  (68)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 183
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 170
	loop : LOOP commands END .  (71)

	.  reduce 71


state 171
	exit : EXIT WHEN OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS  (72)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 184
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 172
	commands_aux : SEMICOLON commands .  (34)

	.  reduce 34


state 173
	access : DOT IDENTIFIER access_n_call_aux .  (40)

	.  reduce 40


state 174
	real_parameter_list : REF IDENTIFIER . real_parameter_list_aux  (45)
	real_parameter_list_aux : .  (49)

	COMMA  shift 175
	CLOSE_PARENTHESIS  reduce 49

	real_parameter_list_aux  goto 185


state 175
	real_parameter_list_aux : COMMA . real_parameter_list  (48)
	real_parameter_list : .  (47)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	REF  shift 161
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	CLOSE_PARENTHESIS  reduce 47

	expression  goto 162
	real_parameter_list  goto 186
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 176
	real_parameter_list : expression real_parameter_list_aux .  (46)

	.  reduce 46


state 177
	subprogram_call : OPEN_PARENTHESIS real_parameter_list CLOSE_PARENTHESIS .  (44)

	.  reduce 44


state 178
	l_exp_aux : COMMA . l_exp  (51)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 164
	l_exp  goto 187
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 179
	l_exp : expression l_exp_aux .  (50)

	.  reduce 50


state 180
	access : OPEN_BRACKETS l_exp CLOSE_BRACKETS . access_n_call_aux  (41)
	access : .  (42)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 42
	ELSE_  reduce 42
	CASE  reduce 42
	DEFAULT  reduce 42
	SEMICOLON  reduce 42
	CLOSE_PARENTHESIS  reduce 42

	access_n_call_aux  goto 188
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 181
	if : IF $$1 OPEN_PARENTHESIS $$2 . expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else  (61)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 189
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 182
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS . BEG caselist default END  (64)

	BEG  shift 190
	.  error


state 183
	for : FOR IDENTIFIER EQUAL expression . for_aux expression DO cb  (68)

	DOWNTO  shift 191
	TO  shift 192
	.  error

	for_aux  goto 193


state 184
	exit : EXIT WHEN OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS  (72)

	CLOSE_PARENTHESIS  shift 194
	.  error


state 185
	real_parameter_list : REF IDENTIFIER real_parameter_list_aux .  (45)

	.  reduce 45


state 186
	real_parameter_list_aux : COMMA real_parameter_list .  (48)

	.  reduce 48


state 187
	l_exp_aux : COMMA l_exp .  (51)

	.  reduce 51


state 188
	access : OPEN_BRACKETS l_exp CLOSE_BRACKETS access_n_call_aux .  (41)

	.  reduce 41


state 189
	if : IF $$1 OPEN_PARENTHESIS $$2 expression . CLOSE_PARENTHESIS $$3 THEN $$4 cb else  (61)

	CLOSE_PARENTHESIS  shift 195
	.  error


state 190
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG . caselist default END  (64)
	caselist : .  (66)

	CASE  shift 196
	DEFAULT  reduce 66

	caselist  goto 197


state 191
	for_aux : DOWNTO .  (70)

	.  reduce 70


state 192
	for_aux : TO .  (69)

	.  reduce 69


state 193
	for : FOR IDENTIFIER EQUAL expression for_aux . expression DO cb  (68)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 198
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 194
	exit : EXIT WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .  (72)

	.  reduce 72


state 195
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS . $$3 THEN $$4 cb else  (61)
	$$3 : .  (59)

	.  reduce 59

	$$3  goto 199


state 196
	caselist : CASE . expression COLON cb caselist  (65)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 200
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 197
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist . default END  (64)

	DEFAULT  shift 201
	.  error

	default  goto 202


state 198
	for : FOR IDENTIFIER EQUAL expression for_aux expression . DO cb  (68)

	DO  shift 203
	.  error


state 199
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 . THEN $$4 cb else  (61)

	THEN  shift 204
	.  error


state 200
	caselist : CASE expression . COLON cb caselist  (65)

	COLON  shift 205
	.  error


state 201
	default : DEFAULT . COLON cb  (67)

	COLON  shift 206
	.  error


state 202
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default . END  (64)

	END  shift 207
	.  error


state 203
	for : FOR IDENTIFIER EQUAL expression for_aux expression DO . cb  (68)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 208
	cb  goto 209
	command  goto 210
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 204
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN . $$4 cb else  (61)
	$$4 : .  (60)

	.  reduce 60

	$$4  goto 211


state 205
	caselist : CASE expression COLON . cb caselist  (65)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 208
	cb  goto 212
	command  goto 210
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 206
	default : DEFAULT COLON . cb  (67)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 208
	cb  goto 213
	command  goto 210
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 207
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END .  (64)

	.  reduce 64


state 208
	cb : block .  (23)

	.  reduce 23


state 209
	for : FOR IDENTIFIER EQUAL expression for_aux expression DO cb .  (68)

	.  reduce 68


state 210
	cb : command .  (22)

	.  reduce 22


state 211
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 . cb else  (61)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 208
	cb  goto 214
	command  goto 210
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 212
	caselist : CASE expression COLON cb . caselist  (65)
	caselist : .  (66)

	CASE  shift 196
	DEFAULT  reduce 66

	caselist  goto 215


state 213
	default : DEFAULT COLON cb .  (67)

	.  reduce 67


214: shift/reduce conflict (shift 216, reduce 63) on ELSE_
state 214
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb . else  (61)
	else : .  (63)

	ELSE_  shift 216
	END  reduce 63
	CASE  reduce 63
	DEFAULT  reduce 63
	SEMICOLON  reduce 63

	else  goto 217


state 215
	caselist : CASE expression COLON cb caselist .  (65)

	.  reduce 65


state 216
	else : ELSE_ . cb  (62)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 208
	cb  goto 218
	command  goto 210
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 217
	if : IF $$1 OPEN_PARENTHESIS $$2 expression CLOSE_PARENTHESIS $$3 THEN $$4 cb else .  (61)

	.  reduce 61


state 218
	else : ELSE_ cb .  (62)

	.  reduce 62


State 214 contains 1 shift/reduce conflict.


63 terminals, 60 nonterminals
113 grammar rules, 219 states
