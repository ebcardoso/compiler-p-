   0  $accept : declaration $end

   1  declaration : var declaration
   2              | const declaration
   3              | subprogram declaration
   4              |

   5  var : VAR IDENTIFIER id_exp ids_exps

   6  id_exp : EQUAL expression
   7         |

   8  ids_exps : COMMA IDENTIFIER id_exp ids_exps
   9           |

  10  const : CONST IDENTIFIER EQUAL expression const_aux

  11  const_aux : COMMA IDENTIFIER EQUAL expression const_aux
  12            |

  13  subprogram : procedure
  14             | function

  15  block : declaration BEG command END

  16  procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block

  17  function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block

  18  parameter_list : IDENTIFIER parameter_list_aux
  19                 | REF IDENTIFIER parameter_list_aux
  20                 |

  21  parameter_list_aux : COMMA parameter_list
  22                     |

  23  cb : command
  24     | block

  25  command : access_n_call
  26          | return
  27          | break
  28          | if
  29          | switch
  30          | loop
  31          | exit
  32          | for

  33  block : declaration BEG commands END

  34  commands : command commands_aux

  35  commands_aux : SEMICOLON commands
  36               |

  37  access_n_call : IDENTIFIER access_n_call_aux

  38  access_n_call_aux : access
  39                    | attribuition
  40                    | subprogram_call

  41  access : DOT IDENTIFIER access_n_call_aux
  42         | OPEN_BRACKETS l_exp CLOSE_BRACKETS access_n_call_aux
  43         |

  44  attribuition : EQUAL expression

  45  subprogram_call : OPEN_PARENTHESIS real_parameter_list CLOSE_PARENTHESIS

  46  real_parameter_list : REF IDENTIFIER real_parameter_list_aux
  47                      | expression real_parameter_list_aux
  48                      |

  49  real_parameter_list_aux : COMMA real_parameter_list
  50                          |

  51  l_exp : expression l_exp_aux

  52  l_exp_aux : COMMA l_exp
  53            |

  54  return : RETURN return_aux

  55  return_aux : expression
  56             |

  57  break : BREAK

  58  if : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS THEN cb else

  59  else : ELSE cb
  60       |

  61  switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END

  62  caselist : CASE expression COLON cb caselist
  63           |

  64  default : DEFAULT COLON cb

  65  for : FOR IDENTIFIER EQUAL expression for_aux expression DO cb

  66  for_aux : TO
  67          | DOWNTO

  68  loop : LOOP commands END

  69  exit : EXIT WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

  70  expression : term_or term_or_tail

  71  term_or_tail : OR term_or term_or_tail
  72               |

  73  term_or : term_and term_and_tail

  74  term_and_tail : AND term_and term_and_tail
  75                |

  76  term_and : term_bool_comparison term_bool_comparison_tail

  77  term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison term_bool_comparison_tail
  78                            | NOT_EQUAL term_bool_comparison term_bool_comparison_tail
  79                            |

  80  term_bool_comparison : term_arit_comparison term_arit_comparison_tail

  81  term_arit_comparison_tail : LESS_THEN term_arit_comparison term_arit_comparison_tail
  82                            | BIGGER_THEN term_arit_comparison term_arit_comparison_tail
  83                            | LESS_EQUAL term_arit_comparison term_arit_comparison_tail
  84                            | BIGGER_EQUAL term_arit_comparison term_arit_comparison_tail
  85                            |

  86  term_arit_comparison : term term_tail

  87  term_tail : ADD term term_tail
  88            | SUB term term_tail
  89            |

  90  term : factor factor_tail

  91  factor_tail : MULT factor factor_tail
  92              | DIV factor factor_tail
  93              | MOD factor factor_tail
  94              |

  95  factor : negation_unsub negation_unsub_tail

  96  negation_unsub_tail : NEG negation_unsub
  97                      |

  98  negation_unsub : IDENTIFIER
  99                 | arr_exp
 100                 | literal
 101                 | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

 102  arr_exp : OPEN_BRACES literal arr_exp_aux CLOSE_BRACES

 103  arr_exp_aux : COMMA literal arr_exp_aux
 104              |

 105  literal : STRING_LIT
 106          | NUMBER_INT
 107          | NUMBER_REAL
 108          | TRUE
 109          | FALSE

state 0
	$accept : . declaration $end  (0)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4

	declaration  goto 5
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 1
	procedure : PROCEDURE . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (16)

	IDENTIFIER  shift 11
	.  error


state 2
	function : FUNCTION . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (17)

	IDENTIFIER  shift 12
	.  error


state 3
	var : VAR . IDENTIFIER id_exp ids_exps  (5)

	IDENTIFIER  shift 13
	.  error


state 4
	const : CONST . IDENTIFIER EQUAL expression const_aux  (10)

	IDENTIFIER  shift 14
	.  error


state 5
	$accept : declaration . $end  (0)

	$end  accept


state 6
	declaration : var . declaration  (1)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 15
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 7
	declaration : const . declaration  (2)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 16
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 8
	declaration : subprogram . declaration  (3)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	$end  reduce 4
	BEG  reduce 4

	declaration  goto 17
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10


state 9
	subprogram : procedure .  (13)

	.  reduce 13


state 10
	subprogram : function .  (14)

	.  reduce 14


state 11
	procedure : PROCEDURE IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (16)

	OPEN_PARENTHESIS  shift 18
	.  error


state 12
	function : FUNCTION IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block  (17)

	OPEN_PARENTHESIS  shift 19
	.  error


state 13
	var : VAR IDENTIFIER . id_exp ids_exps  (5)
	id_exp : .  (7)

	EQUAL  shift 20
	$end  reduce 7
	PROCEDURE  reduce 7
	FUNCTION  reduce 7
	VAR  reduce 7
	CONST  reduce 7
	BEG  reduce 7
	COMMA  reduce 7

	id_exp  goto 21


state 14
	const : CONST IDENTIFIER . EQUAL expression const_aux  (10)

	EQUAL  shift 22
	.  error


state 15
	declaration : var declaration .  (1)

	.  reduce 1


state 16
	declaration : const declaration .  (2)

	.  reduce 2


state 17
	declaration : subprogram declaration .  (3)

	.  reduce 3


state 18
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS block  (16)
	parameter_list : .  (20)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 20

	parameter_list  goto 25


state 19
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS block  (17)
	parameter_list : .  (20)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 20

	parameter_list  goto 26


state 20
	id_exp : EQUAL . expression  (6)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 35
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 21
	var : VAR IDENTIFIER id_exp . ids_exps  (5)
	ids_exps : .  (9)

	COMMA  shift 45
	$end  reduce 9
	PROCEDURE  reduce 9
	FUNCTION  reduce 9
	VAR  reduce 9
	CONST  reduce 9
	BEG  reduce 9

	ids_exps  goto 46


state 22
	const : CONST IDENTIFIER EQUAL . expression const_aux  (10)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 47
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 23
	parameter_list : IDENTIFIER . parameter_list_aux  (18)
	parameter_list_aux : .  (22)

	COMMA  shift 48
	CLOSE_PARENTHESIS  reduce 22

	parameter_list_aux  goto 49


state 24
	parameter_list : REF . IDENTIFIER parameter_list_aux  (19)

	IDENTIFIER  shift 50
	.  error


state 25
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS block  (16)

	CLOSE_PARENTHESIS  shift 51
	.  error


state 26
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS block  (17)

	CLOSE_PARENTHESIS  shift 52
	.  error


state 27
	negation_unsub : IDENTIFIER .  (98)

	.  reduce 98


state 28
	literal : STRING_LIT .  (105)

	.  reduce 105


state 29
	literal : NUMBER_INT .  (106)

	.  reduce 106


state 30
	literal : NUMBER_REAL .  (107)

	.  reduce 107


state 31
	literal : TRUE .  (108)

	.  reduce 108


state 32
	literal : FALSE .  (109)

	.  reduce 109


state 33
	negation_unsub : OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS  (101)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 53
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 34
	arr_exp : OPEN_BRACES . literal arr_exp_aux CLOSE_BRACES  (102)

	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	.  error

	literal  goto 54


state 35
	id_exp : EQUAL expression .  (6)

	.  reduce 6


state 36
	expression : term_or . term_or_tail  (70)
	term_or_tail : .  (72)

	OR  shift 55
	$end  reduce 72
	PROCEDURE  reduce 72
	FUNCTION  reduce 72
	VAR  reduce 72
	CONST  reduce 72
	BEG  reduce 72
	END  reduce 72
	ELSE  reduce 72
	CASE  reduce 72
	DEFAULT  reduce 72
	DOWNTO  reduce 72
	TO  reduce 72
	DO  reduce 72
	SEMICOLON  reduce 72
	COLON  reduce 72
	COMMA  reduce 72
	CLOSE_PARENTHESIS  reduce 72
	CLOSE_BRACKETS  reduce 72

	term_or_tail  goto 56


state 37
	term_or : term_and . term_and_tail  (73)
	term_and_tail : .  (75)

	AND  shift 57
	$end  reduce 75
	PROCEDURE  reduce 75
	FUNCTION  reduce 75
	VAR  reduce 75
	CONST  reduce 75
	BEG  reduce 75
	END  reduce 75
	ELSE  reduce 75
	CASE  reduce 75
	DEFAULT  reduce 75
	DOWNTO  reduce 75
	TO  reduce 75
	DO  reduce 75
	SEMICOLON  reduce 75
	COLON  reduce 75
	COMMA  reduce 75
	CLOSE_PARENTHESIS  reduce 75
	CLOSE_BRACKETS  reduce 75
	OR  reduce 75

	term_and_tail  goto 58


state 38
	term_and : term_bool_comparison . term_bool_comparison_tail  (76)
	term_bool_comparison_tail : .  (79)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 79
	PROCEDURE  reduce 79
	FUNCTION  reduce 79
	VAR  reduce 79
	CONST  reduce 79
	BEG  reduce 79
	END  reduce 79
	ELSE  reduce 79
	CASE  reduce 79
	DEFAULT  reduce 79
	DOWNTO  reduce 79
	TO  reduce 79
	DO  reduce 79
	SEMICOLON  reduce 79
	COLON  reduce 79
	COMMA  reduce 79
	CLOSE_PARENTHESIS  reduce 79
	CLOSE_BRACKETS  reduce 79
	OR  reduce 79
	AND  reduce 79

	term_bool_comparison_tail  goto 61


state 39
	term_bool_comparison : term_arit_comparison . term_arit_comparison_tail  (80)
	term_arit_comparison_tail : .  (85)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 85
	PROCEDURE  reduce 85
	FUNCTION  reduce 85
	VAR  reduce 85
	CONST  reduce 85
	BEG  reduce 85
	END  reduce 85
	ELSE  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	DOWNTO  reduce 85
	TO  reduce 85
	DO  reduce 85
	SEMICOLON  reduce 85
	COLON  reduce 85
	COMMA  reduce 85
	CLOSE_PARENTHESIS  reduce 85
	CLOSE_BRACKETS  reduce 85
	OR  reduce 85
	AND  reduce 85
	EQUAL_LOGIC  reduce 85
	NOT_EQUAL  reduce 85

	term_arit_comparison_tail  goto 66


state 40
	term_arit_comparison : term . term_tail  (86)
	term_tail : .  (89)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 89
	PROCEDURE  reduce 89
	FUNCTION  reduce 89
	VAR  reduce 89
	CONST  reduce 89
	BEG  reduce 89
	END  reduce 89
	ELSE  reduce 89
	CASE  reduce 89
	DEFAULT  reduce 89
	DOWNTO  reduce 89
	TO  reduce 89
	DO  reduce 89
	SEMICOLON  reduce 89
	COLON  reduce 89
	COMMA  reduce 89
	CLOSE_PARENTHESIS  reduce 89
	CLOSE_BRACKETS  reduce 89
	OR  reduce 89
	AND  reduce 89
	LESS_THEN  reduce 89
	BIGGER_THEN  reduce 89
	EQUAL_LOGIC  reduce 89
	NOT_EQUAL  reduce 89
	LESS_EQUAL  reduce 89
	BIGGER_EQUAL  reduce 89

	term_tail  goto 69


state 41
	term : factor . factor_tail  (90)
	factor_tail : .  (94)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 94
	PROCEDURE  reduce 94
	FUNCTION  reduce 94
	VAR  reduce 94
	CONST  reduce 94
	BEG  reduce 94
	END  reduce 94
	ELSE  reduce 94
	CASE  reduce 94
	DEFAULT  reduce 94
	DOWNTO  reduce 94
	TO  reduce 94
	DO  reduce 94
	SEMICOLON  reduce 94
	COLON  reduce 94
	COMMA  reduce 94
	CLOSE_PARENTHESIS  reduce 94
	CLOSE_BRACKETS  reduce 94
	ADD  reduce 94
	SUB  reduce 94
	OR  reduce 94
	AND  reduce 94
	LESS_THEN  reduce 94
	BIGGER_THEN  reduce 94
	EQUAL_LOGIC  reduce 94
	NOT_EQUAL  reduce 94
	LESS_EQUAL  reduce 94
	BIGGER_EQUAL  reduce 94

	factor_tail  goto 73


state 42
	factor : negation_unsub . negation_unsub_tail  (95)
	negation_unsub_tail : .  (97)

	NEG  shift 74
	$end  reduce 97
	PROCEDURE  reduce 97
	FUNCTION  reduce 97
	VAR  reduce 97
	CONST  reduce 97
	BEG  reduce 97
	END  reduce 97
	ELSE  reduce 97
	CASE  reduce 97
	DEFAULT  reduce 97
	DOWNTO  reduce 97
	TO  reduce 97
	DO  reduce 97
	SEMICOLON  reduce 97
	COLON  reduce 97
	COMMA  reduce 97
	CLOSE_PARENTHESIS  reduce 97
	CLOSE_BRACKETS  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	MULT  reduce 97
	DIV  reduce 97
	MOD  reduce 97
	OR  reduce 97
	AND  reduce 97
	LESS_THEN  reduce 97
	BIGGER_THEN  reduce 97
	EQUAL_LOGIC  reduce 97
	NOT_EQUAL  reduce 97
	LESS_EQUAL  reduce 97
	BIGGER_EQUAL  reduce 97

	negation_unsub_tail  goto 75


state 43
	negation_unsub : arr_exp .  (99)

	.  reduce 99


state 44
	negation_unsub : literal .  (100)

	.  reduce 100


state 45
	ids_exps : COMMA . IDENTIFIER id_exp ids_exps  (8)

	IDENTIFIER  shift 76
	.  error


state 46
	var : VAR IDENTIFIER id_exp ids_exps .  (5)

	.  reduce 5


state 47
	const : CONST IDENTIFIER EQUAL expression . const_aux  (10)
	const_aux : .  (12)

	COMMA  shift 77
	$end  reduce 12
	PROCEDURE  reduce 12
	FUNCTION  reduce 12
	VAR  reduce 12
	CONST  reduce 12
	BEG  reduce 12

	const_aux  goto 78


state 48
	parameter_list_aux : COMMA . parameter_list  (21)
	parameter_list : .  (20)

	IDENTIFIER  shift 23
	REF  shift 24
	CLOSE_PARENTHESIS  reduce 20

	parameter_list  goto 79


state 49
	parameter_list : IDENTIFIER parameter_list_aux .  (18)

	.  reduce 18


state 50
	parameter_list : REF IDENTIFIER . parameter_list_aux  (19)
	parameter_list_aux : .  (22)

	COMMA  shift 48
	CLOSE_PARENTHESIS  reduce 22

	parameter_list_aux  goto 80


state 51
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . block  (16)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 82


state 52
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . block  (17)
	declaration : .  (4)

	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 83


state 53
	negation_unsub : OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS  (101)

	CLOSE_PARENTHESIS  shift 84
	.  error


state 54
	arr_exp : OPEN_BRACES literal . arr_exp_aux CLOSE_BRACES  (102)
	arr_exp_aux : .  (104)

	COMMA  shift 85
	CLOSE_BRACES  reduce 104

	arr_exp_aux  goto 86


state 55
	term_or_tail : OR . term_or term_or_tail  (71)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_or  goto 87
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 56
	expression : term_or term_or_tail .  (70)

	.  reduce 70


state 57
	term_and_tail : AND . term_and term_and_tail  (74)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_and  goto 88
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 58
	term_or : term_and term_and_tail .  (73)

	.  reduce 73


state 59
	term_bool_comparison_tail : EQUAL_LOGIC . term_bool_comparison term_bool_comparison_tail  (77)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_bool_comparison  goto 89
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 60
	term_bool_comparison_tail : NOT_EQUAL . term_bool_comparison term_bool_comparison_tail  (78)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_bool_comparison  goto 90
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 61
	term_and : term_bool_comparison term_bool_comparison_tail .  (76)

	.  reduce 76


state 62
	term_arit_comparison_tail : LESS_THEN . term_arit_comparison term_arit_comparison_tail  (81)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 91
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 63
	term_arit_comparison_tail : BIGGER_THEN . term_arit_comparison term_arit_comparison_tail  (82)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 92
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 64
	term_arit_comparison_tail : LESS_EQUAL . term_arit_comparison term_arit_comparison_tail  (83)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 93
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 65
	term_arit_comparison_tail : BIGGER_EQUAL . term_arit_comparison term_arit_comparison_tail  (84)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term_arit_comparison  goto 94
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 66
	term_bool_comparison : term_arit_comparison term_arit_comparison_tail .  (80)

	.  reduce 80


state 67
	term_tail : ADD . term term_tail  (87)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term  goto 95
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 68
	term_tail : SUB . term term_tail  (88)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	term  goto 96
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 69
	term_arit_comparison : term term_tail .  (86)

	.  reduce 86


state 70
	factor_tail : MULT . factor factor_tail  (91)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 97
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 71
	factor_tail : DIV . factor factor_tail  (92)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 98
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 72
	factor_tail : MOD . factor factor_tail  (93)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	factor  goto 99
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 73
	term : factor factor_tail .  (90)

	.  reduce 90


state 74
	negation_unsub_tail : NEG . negation_unsub  (96)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	negation_unsub  goto 100
	arr_exp  goto 43
	literal  goto 44


state 75
	factor : negation_unsub negation_unsub_tail .  (95)

	.  reduce 95


state 76
	ids_exps : COMMA IDENTIFIER . id_exp ids_exps  (8)
	id_exp : .  (7)

	EQUAL  shift 20
	$end  reduce 7
	PROCEDURE  reduce 7
	FUNCTION  reduce 7
	VAR  reduce 7
	CONST  reduce 7
	BEG  reduce 7
	COMMA  reduce 7

	id_exp  goto 101


state 77
	const_aux : COMMA . IDENTIFIER EQUAL expression const_aux  (11)

	IDENTIFIER  shift 102
	.  error


state 78
	const : CONST IDENTIFIER EQUAL expression const_aux .  (10)

	.  reduce 10


state 79
	parameter_list_aux : COMMA parameter_list .  (21)

	.  reduce 21


state 80
	parameter_list : REF IDENTIFIER parameter_list_aux .  (19)

	.  reduce 19


state 81
	block : declaration . BEG command END  (15)
	block : declaration . BEG commands END  (33)

	BEG  shift 103
	.  error


state 82
	procedure : PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block .  (16)

	.  reduce 16


state 83
	function : FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS block .  (17)

	.  reduce 17


state 84
	negation_unsub : OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .  (101)

	.  reduce 101


state 85
	arr_exp_aux : COMMA . literal arr_exp_aux  (103)

	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	.  error

	literal  goto 104


state 86
	arr_exp : OPEN_BRACES literal arr_exp_aux . CLOSE_BRACES  (102)

	CLOSE_BRACES  shift 105
	.  error


state 87
	term_or_tail : OR term_or . term_or_tail  (71)
	term_or_tail : .  (72)

	OR  shift 55
	$end  reduce 72
	PROCEDURE  reduce 72
	FUNCTION  reduce 72
	VAR  reduce 72
	CONST  reduce 72
	BEG  reduce 72
	END  reduce 72
	ELSE  reduce 72
	CASE  reduce 72
	DEFAULT  reduce 72
	DOWNTO  reduce 72
	TO  reduce 72
	DO  reduce 72
	SEMICOLON  reduce 72
	COLON  reduce 72
	COMMA  reduce 72
	CLOSE_PARENTHESIS  reduce 72
	CLOSE_BRACKETS  reduce 72

	term_or_tail  goto 106


state 88
	term_and_tail : AND term_and . term_and_tail  (74)
	term_and_tail : .  (75)

	AND  shift 57
	$end  reduce 75
	PROCEDURE  reduce 75
	FUNCTION  reduce 75
	VAR  reduce 75
	CONST  reduce 75
	BEG  reduce 75
	END  reduce 75
	ELSE  reduce 75
	CASE  reduce 75
	DEFAULT  reduce 75
	DOWNTO  reduce 75
	TO  reduce 75
	DO  reduce 75
	SEMICOLON  reduce 75
	COLON  reduce 75
	COMMA  reduce 75
	CLOSE_PARENTHESIS  reduce 75
	CLOSE_BRACKETS  reduce 75
	OR  reduce 75

	term_and_tail  goto 107


state 89
	term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison . term_bool_comparison_tail  (77)
	term_bool_comparison_tail : .  (79)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 79
	PROCEDURE  reduce 79
	FUNCTION  reduce 79
	VAR  reduce 79
	CONST  reduce 79
	BEG  reduce 79
	END  reduce 79
	ELSE  reduce 79
	CASE  reduce 79
	DEFAULT  reduce 79
	DOWNTO  reduce 79
	TO  reduce 79
	DO  reduce 79
	SEMICOLON  reduce 79
	COLON  reduce 79
	COMMA  reduce 79
	CLOSE_PARENTHESIS  reduce 79
	CLOSE_BRACKETS  reduce 79
	OR  reduce 79
	AND  reduce 79

	term_bool_comparison_tail  goto 108


state 90
	term_bool_comparison_tail : NOT_EQUAL term_bool_comparison . term_bool_comparison_tail  (78)
	term_bool_comparison_tail : .  (79)

	EQUAL_LOGIC  shift 59
	NOT_EQUAL  shift 60
	$end  reduce 79
	PROCEDURE  reduce 79
	FUNCTION  reduce 79
	VAR  reduce 79
	CONST  reduce 79
	BEG  reduce 79
	END  reduce 79
	ELSE  reduce 79
	CASE  reduce 79
	DEFAULT  reduce 79
	DOWNTO  reduce 79
	TO  reduce 79
	DO  reduce 79
	SEMICOLON  reduce 79
	COLON  reduce 79
	COMMA  reduce 79
	CLOSE_PARENTHESIS  reduce 79
	CLOSE_BRACKETS  reduce 79
	OR  reduce 79
	AND  reduce 79

	term_bool_comparison_tail  goto 109


state 91
	term_arit_comparison_tail : LESS_THEN term_arit_comparison . term_arit_comparison_tail  (81)
	term_arit_comparison_tail : .  (85)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 85
	PROCEDURE  reduce 85
	FUNCTION  reduce 85
	VAR  reduce 85
	CONST  reduce 85
	BEG  reduce 85
	END  reduce 85
	ELSE  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	DOWNTO  reduce 85
	TO  reduce 85
	DO  reduce 85
	SEMICOLON  reduce 85
	COLON  reduce 85
	COMMA  reduce 85
	CLOSE_PARENTHESIS  reduce 85
	CLOSE_BRACKETS  reduce 85
	OR  reduce 85
	AND  reduce 85
	EQUAL_LOGIC  reduce 85
	NOT_EQUAL  reduce 85

	term_arit_comparison_tail  goto 110


state 92
	term_arit_comparison_tail : BIGGER_THEN term_arit_comparison . term_arit_comparison_tail  (82)
	term_arit_comparison_tail : .  (85)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 85
	PROCEDURE  reduce 85
	FUNCTION  reduce 85
	VAR  reduce 85
	CONST  reduce 85
	BEG  reduce 85
	END  reduce 85
	ELSE  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	DOWNTO  reduce 85
	TO  reduce 85
	DO  reduce 85
	SEMICOLON  reduce 85
	COLON  reduce 85
	COMMA  reduce 85
	CLOSE_PARENTHESIS  reduce 85
	CLOSE_BRACKETS  reduce 85
	OR  reduce 85
	AND  reduce 85
	EQUAL_LOGIC  reduce 85
	NOT_EQUAL  reduce 85

	term_arit_comparison_tail  goto 111


state 93
	term_arit_comparison_tail : LESS_EQUAL term_arit_comparison . term_arit_comparison_tail  (83)
	term_arit_comparison_tail : .  (85)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 85
	PROCEDURE  reduce 85
	FUNCTION  reduce 85
	VAR  reduce 85
	CONST  reduce 85
	BEG  reduce 85
	END  reduce 85
	ELSE  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	DOWNTO  reduce 85
	TO  reduce 85
	DO  reduce 85
	SEMICOLON  reduce 85
	COLON  reduce 85
	COMMA  reduce 85
	CLOSE_PARENTHESIS  reduce 85
	CLOSE_BRACKETS  reduce 85
	OR  reduce 85
	AND  reduce 85
	EQUAL_LOGIC  reduce 85
	NOT_EQUAL  reduce 85

	term_arit_comparison_tail  goto 112


state 94
	term_arit_comparison_tail : BIGGER_EQUAL term_arit_comparison . term_arit_comparison_tail  (84)
	term_arit_comparison_tail : .  (85)

	LESS_THEN  shift 62
	BIGGER_THEN  shift 63
	LESS_EQUAL  shift 64
	BIGGER_EQUAL  shift 65
	$end  reduce 85
	PROCEDURE  reduce 85
	FUNCTION  reduce 85
	VAR  reduce 85
	CONST  reduce 85
	BEG  reduce 85
	END  reduce 85
	ELSE  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	DOWNTO  reduce 85
	TO  reduce 85
	DO  reduce 85
	SEMICOLON  reduce 85
	COLON  reduce 85
	COMMA  reduce 85
	CLOSE_PARENTHESIS  reduce 85
	CLOSE_BRACKETS  reduce 85
	OR  reduce 85
	AND  reduce 85
	EQUAL_LOGIC  reduce 85
	NOT_EQUAL  reduce 85

	term_arit_comparison_tail  goto 113


state 95
	term_tail : ADD term . term_tail  (87)
	term_tail : .  (89)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 89
	PROCEDURE  reduce 89
	FUNCTION  reduce 89
	VAR  reduce 89
	CONST  reduce 89
	BEG  reduce 89
	END  reduce 89
	ELSE  reduce 89
	CASE  reduce 89
	DEFAULT  reduce 89
	DOWNTO  reduce 89
	TO  reduce 89
	DO  reduce 89
	SEMICOLON  reduce 89
	COLON  reduce 89
	COMMA  reduce 89
	CLOSE_PARENTHESIS  reduce 89
	CLOSE_BRACKETS  reduce 89
	OR  reduce 89
	AND  reduce 89
	LESS_THEN  reduce 89
	BIGGER_THEN  reduce 89
	EQUAL_LOGIC  reduce 89
	NOT_EQUAL  reduce 89
	LESS_EQUAL  reduce 89
	BIGGER_EQUAL  reduce 89

	term_tail  goto 114


state 96
	term_tail : SUB term . term_tail  (88)
	term_tail : .  (89)

	ADD  shift 67
	SUB  shift 68
	$end  reduce 89
	PROCEDURE  reduce 89
	FUNCTION  reduce 89
	VAR  reduce 89
	CONST  reduce 89
	BEG  reduce 89
	END  reduce 89
	ELSE  reduce 89
	CASE  reduce 89
	DEFAULT  reduce 89
	DOWNTO  reduce 89
	TO  reduce 89
	DO  reduce 89
	SEMICOLON  reduce 89
	COLON  reduce 89
	COMMA  reduce 89
	CLOSE_PARENTHESIS  reduce 89
	CLOSE_BRACKETS  reduce 89
	OR  reduce 89
	AND  reduce 89
	LESS_THEN  reduce 89
	BIGGER_THEN  reduce 89
	EQUAL_LOGIC  reduce 89
	NOT_EQUAL  reduce 89
	LESS_EQUAL  reduce 89
	BIGGER_EQUAL  reduce 89

	term_tail  goto 115


state 97
	factor_tail : MULT factor . factor_tail  (91)
	factor_tail : .  (94)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 94
	PROCEDURE  reduce 94
	FUNCTION  reduce 94
	VAR  reduce 94
	CONST  reduce 94
	BEG  reduce 94
	END  reduce 94
	ELSE  reduce 94
	CASE  reduce 94
	DEFAULT  reduce 94
	DOWNTO  reduce 94
	TO  reduce 94
	DO  reduce 94
	SEMICOLON  reduce 94
	COLON  reduce 94
	COMMA  reduce 94
	CLOSE_PARENTHESIS  reduce 94
	CLOSE_BRACKETS  reduce 94
	ADD  reduce 94
	SUB  reduce 94
	OR  reduce 94
	AND  reduce 94
	LESS_THEN  reduce 94
	BIGGER_THEN  reduce 94
	EQUAL_LOGIC  reduce 94
	NOT_EQUAL  reduce 94
	LESS_EQUAL  reduce 94
	BIGGER_EQUAL  reduce 94

	factor_tail  goto 116


state 98
	factor_tail : DIV factor . factor_tail  (92)
	factor_tail : .  (94)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 94
	PROCEDURE  reduce 94
	FUNCTION  reduce 94
	VAR  reduce 94
	CONST  reduce 94
	BEG  reduce 94
	END  reduce 94
	ELSE  reduce 94
	CASE  reduce 94
	DEFAULT  reduce 94
	DOWNTO  reduce 94
	TO  reduce 94
	DO  reduce 94
	SEMICOLON  reduce 94
	COLON  reduce 94
	COMMA  reduce 94
	CLOSE_PARENTHESIS  reduce 94
	CLOSE_BRACKETS  reduce 94
	ADD  reduce 94
	SUB  reduce 94
	OR  reduce 94
	AND  reduce 94
	LESS_THEN  reduce 94
	BIGGER_THEN  reduce 94
	EQUAL_LOGIC  reduce 94
	NOT_EQUAL  reduce 94
	LESS_EQUAL  reduce 94
	BIGGER_EQUAL  reduce 94

	factor_tail  goto 117


state 99
	factor_tail : MOD factor . factor_tail  (93)
	factor_tail : .  (94)

	MULT  shift 70
	DIV  shift 71
	MOD  shift 72
	$end  reduce 94
	PROCEDURE  reduce 94
	FUNCTION  reduce 94
	VAR  reduce 94
	CONST  reduce 94
	BEG  reduce 94
	END  reduce 94
	ELSE  reduce 94
	CASE  reduce 94
	DEFAULT  reduce 94
	DOWNTO  reduce 94
	TO  reduce 94
	DO  reduce 94
	SEMICOLON  reduce 94
	COLON  reduce 94
	COMMA  reduce 94
	CLOSE_PARENTHESIS  reduce 94
	CLOSE_BRACKETS  reduce 94
	ADD  reduce 94
	SUB  reduce 94
	OR  reduce 94
	AND  reduce 94
	LESS_THEN  reduce 94
	BIGGER_THEN  reduce 94
	EQUAL_LOGIC  reduce 94
	NOT_EQUAL  reduce 94
	LESS_EQUAL  reduce 94
	BIGGER_EQUAL  reduce 94

	factor_tail  goto 118


state 100
	negation_unsub_tail : NEG negation_unsub .  (96)

	.  reduce 96


state 101
	ids_exps : COMMA IDENTIFIER id_exp . ids_exps  (8)
	ids_exps : .  (9)

	COMMA  shift 45
	$end  reduce 9
	PROCEDURE  reduce 9
	FUNCTION  reduce 9
	VAR  reduce 9
	CONST  reduce 9
	BEG  reduce 9

	ids_exps  goto 119


state 102
	const_aux : COMMA IDENTIFIER . EQUAL expression const_aux  (11)

	EQUAL  shift 120
	.  error


state 103
	block : declaration BEG . command END  (15)
	block : declaration BEG . commands END  (33)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 129
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 138


state 104
	arr_exp_aux : COMMA literal . arr_exp_aux  (103)
	arr_exp_aux : .  (104)

	COMMA  shift 85
	CLOSE_BRACES  reduce 104

	arr_exp_aux  goto 139


state 105
	arr_exp : OPEN_BRACES literal arr_exp_aux CLOSE_BRACES .  (102)

	.  reduce 102


state 106
	term_or_tail : OR term_or term_or_tail .  (71)

	.  reduce 71


state 107
	term_and_tail : AND term_and term_and_tail .  (74)

	.  reduce 74


state 108
	term_bool_comparison_tail : EQUAL_LOGIC term_bool_comparison term_bool_comparison_tail .  (77)

	.  reduce 77


state 109
	term_bool_comparison_tail : NOT_EQUAL term_bool_comparison term_bool_comparison_tail .  (78)

	.  reduce 78


state 110
	term_arit_comparison_tail : LESS_THEN term_arit_comparison term_arit_comparison_tail .  (81)

	.  reduce 81


state 111
	term_arit_comparison_tail : BIGGER_THEN term_arit_comparison term_arit_comparison_tail .  (82)

	.  reduce 82


state 112
	term_arit_comparison_tail : LESS_EQUAL term_arit_comparison term_arit_comparison_tail .  (83)

	.  reduce 83


state 113
	term_arit_comparison_tail : BIGGER_EQUAL term_arit_comparison term_arit_comparison_tail .  (84)

	.  reduce 84


state 114
	term_tail : ADD term term_tail .  (87)

	.  reduce 87


state 115
	term_tail : SUB term term_tail .  (88)

	.  reduce 88


state 116
	factor_tail : MULT factor factor_tail .  (91)

	.  reduce 91


state 117
	factor_tail : DIV factor factor_tail .  (92)

	.  reduce 92


state 118
	factor_tail : MOD factor factor_tail .  (93)

	.  reduce 93


state 119
	ids_exps : COMMA IDENTIFIER id_exp ids_exps .  (8)

	.  reduce 8


state 120
	const_aux : COMMA IDENTIFIER EQUAL . expression const_aux  (11)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 140
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 121
	access_n_call : IDENTIFIER . access_n_call_aux  (37)
	access : .  (43)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 43
	ELSE  reduce 43
	CASE  reduce 43
	DEFAULT  reduce 43
	SEMICOLON  reduce 43
	CLOSE_PARENTHESIS  reduce 43

	access_n_call_aux  goto 145
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 122
	return : RETURN . return_aux  (54)
	return_aux : .  (56)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	END  reduce 56
	ELSE  reduce 56
	CASE  reduce 56
	DEFAULT  reduce 56
	SEMICOLON  reduce 56

	expression  goto 149
	return_aux  goto 150
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 123
	break : BREAK .  (57)

	.  reduce 57


state 124
	if : IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS THEN cb else  (58)

	OPEN_PARENTHESIS  shift 151
	.  error


state 125
	switch : SWITCH . OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END  (61)

	OPEN_PARENTHESIS  shift 152
	.  error


state 126
	for : FOR . IDENTIFIER EQUAL expression for_aux expression DO cb  (65)

	IDENTIFIER  shift 153
	.  error


state 127
	loop : LOOP . commands END  (68)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 154
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 155


state 128
	exit : EXIT . WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS  (69)

	WHEN  shift 156
	.  error


129: shift/reduce conflict (shift 157, reduce 36) on END
state 129
	block : declaration BEG command . END  (15)
	commands : command . commands_aux  (34)
	commands_aux : .  (36)

	END  shift 157
	SEMICOLON  shift 158

	commands_aux  goto 159


state 130
	command : access_n_call .  (25)

	.  reduce 25


state 131
	command : return .  (26)

	.  reduce 26


state 132
	command : break .  (27)

	.  reduce 27


state 133
	command : if .  (28)

	.  reduce 28


state 134
	command : switch .  (29)

	.  reduce 29


state 135
	command : loop .  (30)

	.  reduce 30


state 136
	command : exit .  (31)

	.  reduce 31


state 137
	command : for .  (32)

	.  reduce 32


state 138
	block : declaration BEG commands . END  (33)

	END  shift 160
	.  error


state 139
	arr_exp_aux : COMMA literal arr_exp_aux .  (103)

	.  reduce 103


state 140
	const_aux : COMMA IDENTIFIER EQUAL expression . const_aux  (11)
	const_aux : .  (12)

	COMMA  shift 77
	$end  reduce 12
	PROCEDURE  reduce 12
	FUNCTION  reduce 12
	VAR  reduce 12
	CONST  reduce 12
	BEG  reduce 12

	const_aux  goto 161


state 141
	access : DOT . IDENTIFIER access_n_call_aux  (41)

	IDENTIFIER  shift 162
	.  error


state 142
	subprogram_call : OPEN_PARENTHESIS . real_parameter_list CLOSE_PARENTHESIS  (45)
	real_parameter_list : .  (48)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	REF  shift 163
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	CLOSE_PARENTHESIS  reduce 48

	expression  goto 164
	real_parameter_list  goto 165
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 143
	access : OPEN_BRACKETS . l_exp CLOSE_BRACKETS access_n_call_aux  (42)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 166
	l_exp  goto 167
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 144
	attribuition : EQUAL . expression  (44)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 168
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 145
	access_n_call : IDENTIFIER access_n_call_aux .  (37)

	.  reduce 37


state 146
	access_n_call_aux : access .  (38)

	.  reduce 38


state 147
	access_n_call_aux : attribuition .  (39)

	.  reduce 39


state 148
	access_n_call_aux : subprogram_call .  (40)

	.  reduce 40


state 149
	return_aux : expression .  (55)

	.  reduce 55


state 150
	return : RETURN return_aux .  (54)

	.  reduce 54


state 151
	if : IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS THEN cb else  (58)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 169
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 152
	switch : SWITCH OPEN_PARENTHESIS . access_n_call CLOSE_PARENTHESIS BEG caselist default END  (61)

	IDENTIFIER  shift 121
	.  error

	access_n_call  goto 170


state 153
	for : FOR IDENTIFIER . EQUAL expression for_aux expression DO cb  (65)

	EQUAL  shift 171
	.  error


state 154
	commands : command . commands_aux  (34)
	commands_aux : .  (36)

	SEMICOLON  shift 158
	END  reduce 36

	commands_aux  goto 159


state 155
	loop : LOOP commands . END  (68)

	END  shift 172
	.  error


state 156
	exit : EXIT WHEN . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS  (69)

	OPEN_PARENTHESIS  shift 173
	.  error


state 157
	block : declaration BEG command END .  (15)

	.  reduce 15


state 158
	commands_aux : SEMICOLON . commands  (35)

	IDENTIFIER  shift 121
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	.  error

	command  goto 154
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137
	commands  goto 174


state 159
	commands : command commands_aux .  (34)

	.  reduce 34


state 160
	block : declaration BEG commands END .  (33)

	.  reduce 33


state 161
	const_aux : COMMA IDENTIFIER EQUAL expression const_aux .  (11)

	.  reduce 11


state 162
	access : DOT IDENTIFIER . access_n_call_aux  (41)
	access : .  (43)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 43
	ELSE  reduce 43
	CASE  reduce 43
	DEFAULT  reduce 43
	SEMICOLON  reduce 43
	CLOSE_PARENTHESIS  reduce 43

	access_n_call_aux  goto 175
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 163
	real_parameter_list : REF . IDENTIFIER real_parameter_list_aux  (46)

	IDENTIFIER  shift 176
	.  error


state 164
	real_parameter_list : expression . real_parameter_list_aux  (47)
	real_parameter_list_aux : .  (50)

	COMMA  shift 177
	CLOSE_PARENTHESIS  reduce 50

	real_parameter_list_aux  goto 178


state 165
	subprogram_call : OPEN_PARENTHESIS real_parameter_list . CLOSE_PARENTHESIS  (45)

	CLOSE_PARENTHESIS  shift 179
	.  error


state 166
	l_exp : expression . l_exp_aux  (51)
	l_exp_aux : .  (53)

	COMMA  shift 180
	CLOSE_BRACKETS  reduce 53

	l_exp_aux  goto 181


state 167
	access : OPEN_BRACKETS l_exp . CLOSE_BRACKETS access_n_call_aux  (42)

	CLOSE_BRACKETS  shift 182
	.  error


state 168
	attribuition : EQUAL expression .  (44)

	.  reduce 44


state 169
	if : IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS THEN cb else  (58)

	CLOSE_PARENTHESIS  shift 183
	.  error


state 170
	switch : SWITCH OPEN_PARENTHESIS access_n_call . CLOSE_PARENTHESIS BEG caselist default END  (61)

	CLOSE_PARENTHESIS  shift 184
	.  error


state 171
	for : FOR IDENTIFIER EQUAL . expression for_aux expression DO cb  (65)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 185
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 172
	loop : LOOP commands END .  (68)

	.  reduce 68


state 173
	exit : EXIT WHEN OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS  (69)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 186
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 174
	commands_aux : SEMICOLON commands .  (35)

	.  reduce 35


state 175
	access : DOT IDENTIFIER access_n_call_aux .  (41)

	.  reduce 41


state 176
	real_parameter_list : REF IDENTIFIER . real_parameter_list_aux  (46)
	real_parameter_list_aux : .  (50)

	COMMA  shift 177
	CLOSE_PARENTHESIS  reduce 50

	real_parameter_list_aux  goto 187


state 177
	real_parameter_list_aux : COMMA . real_parameter_list  (49)
	real_parameter_list : .  (48)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	REF  shift 163
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	CLOSE_PARENTHESIS  reduce 48

	expression  goto 164
	real_parameter_list  goto 188
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 178
	real_parameter_list : expression real_parameter_list_aux .  (47)

	.  reduce 47


state 179
	subprogram_call : OPEN_PARENTHESIS real_parameter_list CLOSE_PARENTHESIS .  (45)

	.  reduce 45


state 180
	l_exp_aux : COMMA . l_exp  (52)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 166
	l_exp  goto 189
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 181
	l_exp : expression l_exp_aux .  (51)

	.  reduce 51


state 182
	access : OPEN_BRACKETS l_exp CLOSE_BRACKETS . access_n_call_aux  (42)
	access : .  (43)

	DOT  shift 141
	OPEN_PARENTHESIS  shift 142
	OPEN_BRACKETS  shift 143
	EQUAL  shift 144
	END  reduce 43
	ELSE  reduce 43
	CASE  reduce 43
	DEFAULT  reduce 43
	SEMICOLON  reduce 43
	CLOSE_PARENTHESIS  reduce 43

	access_n_call_aux  goto 190
	access  goto 146
	attribuition  goto 147
	subprogram_call  goto 148


state 183
	if : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . THEN cb else  (58)

	THEN  shift 191
	.  error


state 184
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS . BEG caselist default END  (61)

	BEG  shift 192
	.  error


state 185
	for : FOR IDENTIFIER EQUAL expression . for_aux expression DO cb  (65)

	DOWNTO  shift 193
	TO  shift 194
	.  error

	for_aux  goto 195


state 186
	exit : EXIT WHEN OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS  (69)

	CLOSE_PARENTHESIS  shift 196
	.  error


state 187
	real_parameter_list : REF IDENTIFIER real_parameter_list_aux .  (46)

	.  reduce 46


state 188
	real_parameter_list_aux : COMMA real_parameter_list .  (49)

	.  reduce 49


state 189
	l_exp_aux : COMMA l_exp .  (52)

	.  reduce 52


state 190
	access : OPEN_BRACKETS l_exp CLOSE_BRACKETS access_n_call_aux .  (42)

	.  reduce 42


state 191
	if : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS THEN . cb else  (58)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 197
	command  goto 198
	cb  goto 199
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 192
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG . caselist default END  (61)
	caselist : .  (63)

	CASE  shift 200
	DEFAULT  reduce 63

	caselist  goto 201


state 193
	for_aux : DOWNTO .  (67)

	.  reduce 67


state 194
	for_aux : TO .  (66)

	.  reduce 66


state 195
	for : FOR IDENTIFIER EQUAL expression for_aux . expression DO cb  (65)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 202
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 196
	exit : EXIT WHEN OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .  (69)

	.  reduce 69


state 197
	cb : block .  (24)

	.  reduce 24


state 198
	cb : command .  (23)

	.  reduce 23


199: shift/reduce conflict (shift 203, reduce 60) on ELSE
state 199
	if : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS THEN cb . else  (58)
	else : .  (60)

	ELSE  shift 203
	END  reduce 60
	CASE  reduce 60
	DEFAULT  reduce 60
	SEMICOLON  reduce 60

	else  goto 204


state 200
	caselist : CASE . expression COLON cb caselist  (62)

	IDENTIFIER  shift 27
	STRING_LIT  shift 28
	NUMBER_INT  shift 29
	NUMBER_REAL  shift 30
	TRUE  shift 31
	FALSE  shift 32
	OPEN_PARENTHESIS  shift 33
	OPEN_BRACES  shift 34
	.  error

	expression  goto 205
	term_or  goto 36
	term_and  goto 37
	term_bool_comparison  goto 38
	term_arit_comparison  goto 39
	term  goto 40
	factor  goto 41
	negation_unsub  goto 42
	arr_exp  goto 43
	literal  goto 44


state 201
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist . default END  (61)

	DEFAULT  shift 206
	.  error

	default  goto 207


state 202
	for : FOR IDENTIFIER EQUAL expression for_aux expression . DO cb  (65)

	DO  shift 208
	.  error


state 203
	else : ELSE . cb  (59)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 197
	command  goto 198
	cb  goto 209
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 204
	if : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS THEN cb else .  (58)

	.  reduce 58


state 205
	caselist : CASE expression . COLON cb caselist  (62)

	COLON  shift 210
	.  error


state 206
	default : DEFAULT . COLON cb  (64)

	COLON  shift 211
	.  error


state 207
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default . END  (61)

	END  shift 212
	.  error


state 208
	for : FOR IDENTIFIER EQUAL expression for_aux expression DO . cb  (65)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 197
	command  goto 198
	cb  goto 213
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 209
	else : ELSE cb .  (59)

	.  reduce 59


state 210
	caselist : CASE expression COLON . cb caselist  (62)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 197
	command  goto 198
	cb  goto 214
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 211
	default : DEFAULT COLON . cb  (64)
	declaration : .  (4)

	IDENTIFIER  shift 121
	PROCEDURE  shift 1
	FUNCTION  shift 2
	VAR  shift 3
	CONST  shift 4
	RETURN  shift 122
	BREAK  shift 123
	IF  shift 124
	SWITCH  shift 125
	FOR  shift 126
	LOOP  shift 127
	EXIT  shift 128
	BEG  reduce 4

	declaration  goto 81
	var  goto 6
	const  goto 7
	subprogram  goto 8
	procedure  goto 9
	function  goto 10
	block  goto 197
	command  goto 198
	cb  goto 215
	access_n_call  goto 130
	return  goto 131
	break  goto 132
	if  goto 133
	switch  goto 134
	loop  goto 135
	exit  goto 136
	for  goto 137


state 212
	switch : SWITCH OPEN_PARENTHESIS access_n_call CLOSE_PARENTHESIS BEG caselist default END .  (61)

	.  reduce 61


state 213
	for : FOR IDENTIFIER EQUAL expression for_aux expression DO cb .  (65)

	.  reduce 65


state 214
	caselist : CASE expression COLON cb . caselist  (62)
	caselist : .  (63)

	CASE  shift 200
	DEFAULT  reduce 63

	caselist  goto 216


state 215
	default : DEFAULT COLON cb .  (64)

	.  reduce 64


state 216
	caselist : CASE expression COLON cb caselist .  (62)

	.  reduce 62


State 129 contains 1 shift/reduce conflict.
State 199 contains 1 shift/reduce conflict.


63 terminals, 56 nonterminals
110 grammar rules, 217 states
